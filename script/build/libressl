#!/bin/sh
set -e

pkg_topdir=$(cd $(dirname $0)/../../ && pwd -P)

[ "${pkg_os}" = "" ] && pkg_os=`uname -s | tr -s 'A-Z' 'a-z'`
[ "${pkg_arch}" = "" ] && pkg_arch=`uname -m`

# Cloning libressl from github is hella slow because the portable repo will
# clone the full history of the openbsd repo. So just download the tgz.
pkg_name=libressl
pkg_sha256sum="e57f5e3d5842a81fe9351b6e817fcaf0a749ca4ef35a91465edba9e071dce7c4"
pkg_version=2.5.5
pkg_tarball_url=https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${pkg_version}.tar.gz

pkg_dist_dir=${pkg_topdir}/MK_DIST/${pkg_os}/${pkg_arch}/${pkg_name}
rm -rf ${pkg_dist_dir}
mkdir -p ${pkg_dist_dir}

pkg_build_dir=${pkg_topdir}/MK_BUILD/${pkg_os}/${pkg_arch}/${pkg_name}
rm -rf ${pkg_build_dir}
mkdir -p ${pkg_build_dir}

(
    set -e

    cd ${pkg_build_dir}
    wget ${pkg_tarball_url}
    tarball=$(basename ${pkg_tarball_url})
    build_os=`uname`
    if [ "${build_os}" = "Linux" ]; then
        tarball_sha256sum=$(sha256sum ${tarball} | awk '{print $1}')
    elif [ "${build_os}" = "Darwin" ]; then
        tarball_sha256sum=$(shasum -a 256 ${tarball} | awk '{print $1}')
    else
        echo "FATAL: don't know how to compute sha256sum" 1>&2
        exit 1
    fi
    if [ "${tarball_sha256sum}" != "${pkg_sha256sum}" ]; then
        echo "FATAL: invalid SHA256 sum" 1>&2
        exit 1
    fi
    echo "- verified package sha256sum"
    tar -xf ${tarball}
    srcdir=$(echo ${tarball} | sed 's/\.tar.gz//g')
    cd ${srcdir}

    patch -Np1 -i ${pkg_topdir}/script/build/libressl-000.patch

    if [ "$pkg_os" = "windows" ]; then
        os_dir="..\\..\\..\\..\\..\\MK_DIST\\${pkg_os}"
        cmake.exe -G "NMake Makefiles"                                        \
          -DCMAKE_INSTALL_PREFIX="${os_dir}\\${pkg_arch}\\${pkg_name}"
        nmake.exe /f Makefile install
	exit 0
    fi

    # Required because `autoreconf -i` was probably run on Linux and so when
    # building for Android on macOS there is an attempt to run `ldconfig`.
    autoreconf -i

    ./configure --prefix=${pkg_dist_dir} --disable-shared ${pkg_configure_flags}

    # Note: there is no `libinclude.la` but we use `-rf` so it doesn't matter
    for module in include crypto ssl; do
        (
            set -e
            cd ${module}
            make install
        )
        # No `.la` files around because they will confuse other `./configure`.
        [ "${pkg_dist_dir}" != "" ] &&                                         \
          rm -rf ${pkg_dist_dir}/lib/lib${module}.la
    done
)
